package com.xfhy.dialogfragment;

import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.os.Build;

/**
 * 2017年4月3日10:43:04
 * 
 * @author xfhy
 * 
 *         概述:DialogFragment在android
 *         3.0时被引入。是一种特殊的Fragment，用于在Activity的内容之上展示一个模态的对话框。
 *         典型的用于：展示警告框，输入框，确认框等等
 *         。在DialogFragment产生之前，我们创建对话框：一般采用AlertDialog和Dialog。
 *         注：官方不推荐直接使用Dialog创建对话框。
 * 
 *         好处与用法:使用DialogFragment来管理对话框，当旋转屏幕和按下后退键时可以更好的管理其声明周期，
 *         它和Fragment有着基本一致的声明周期。
 *         且DialogFragment也允许开发者把Dialog作为内嵌的组件进行重用，类似Fragment
 *         （可以在大屏幕和小屏幕显示出不同的效果）。
 * 
 *         使用DialogFragment至少需要实现onCreateView或者onCreateDIalog方法。
 *         onCreateView即使用定义的xml布局文件展示Dialog
 *         。onCreateDialog即利用AlertDialog或者Dialog创建出Dialog。
 * 
 */

public class MainActivity extends Activity implements OnClickListener {

	private Button bt_edit_name;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		bt_edit_name = (Button) findViewById(R.id.bt_edit_name);
		bt_edit_name.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.bt_edit_name:

			break;

		default:
			break;
		}
	}

	/**
	 * 显示编辑名称对话框
	 */
	private void showEditNameDialog() {
		EditNameDialogFragment editNameDialogFragment = new EditNameDialogFragment();
		
	}

}
