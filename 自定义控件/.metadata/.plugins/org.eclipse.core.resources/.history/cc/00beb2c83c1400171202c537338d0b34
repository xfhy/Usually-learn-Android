package com.xfhy.youkumenu.utils;

import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import android.view.animation.RotateAnimation;
import android.widget.RelativeLayout;

/**
 * @author xfhy
 * @date 2017年3月29日 上午11:07:49
 * @package com.xfhy.youkumenu.utils
 * @function
 */
public class AnimationUtils {

	public static int runningAnimationCount = 0;

	/**
	 * 播放RelativeLayout的动画 转出
	 * 
	 * @param layout
	 */
	public static void rotateOutAnim(RelativeLayout layout, long delay) {
		RotateAnimation raAnimation = new RotateAnimation(0f, -180f,
				Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
				1.0f);
		raAnimation.setFillAfter(true); // 动画播放完后,控件不回来(其实是在原地,只是不可见)
		raAnimation.setDuration(500); // 动画执行时间
		raAnimation.setStartOffset(delay); // 设置动画延迟
		
		raAnimation.setAnimationListener(new MyAnimationListener());
		
		layout.startAnimation(raAnimation); // 开始动画
	}

	/**
	 * 播放RelativeLayout的动画 转入
	 * 
	 * @param layout
	 */
	public static void rotateInAnim(RelativeLayout layout) {
		RotateAnimation raAnimation = new RotateAnimation(-180f, 0f,
				Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
				1.0f);
		raAnimation.setFillAfter(true); // 动画播放完后,控件不回来(其实是在原地,只是不可见)
		raAnimation.setDuration(500); // 动画执行时间
		layout.startAnimation(raAnimation); // 开始动画
	}

	static class MyAnimationListener implements AnimationListener {

		@Override
		public void onAnimationStart(Animation animation) {
			runningAnimationCount++;
		}

		@Override
		public void onAnimationEnd(Animation animation) {
			runningAnimationCount--;
		}

		@Override
		public void onAnimationRepeat(Animation animation) {

		}

	}

}
