package com.itheima.playmusic;

import android.app.Activity;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnPreparedListener;
import android.os.Bundle;
import android.os.Environment;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;

import com.itheima.playvideo.R;

public class MainActivity extends Activity implements Callback{

	private MediaPlayer mediaPlayer;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		SurfaceView sv_video = (SurfaceView) findViewById(R.id.sv_video);
		
		// 设置视频播放内容的SurfaceHolder   是用来维护视频播放的内容
		SurfaceHolder holder = sv_video.getHolder();
		//为此持有者添加回调接口。 有多个回调接口与持有者相关联。
		holder.addCallback(this);
		
		// 1.初始化MediaPlayer
		mediaPlayer = new MediaPlayer();

		try {
			// 2.设置资源
			// 播放本地音频或者网络资源都是可以的
			mediaPlayer.setDataSource(Environment.getExternalStorageDirectory()
					.getPath() + "/cc.MP4");
//			02-09 20:15:29.579: W/System.err(9601): java.lang.IllegalArgumentException: The surface has been released

			//2.1 设置视频播放内容的SurfaceHolder   是用来维护视频播放的内容
			mediaPlayer.setDisplay(holder);
			
			// 3. 准备播放
			mediaPlayer.prepare();
			
			

			
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void surfaceCreated(SurfaceHolder holder) {
		mediaPlayer.setOnPreparedListener(new OnPreparedListener() {
			
			@Override
			public void onPrepared(MediaPlayer mp) {
				// 4. 开始播放
				mediaPlayer.start();
			}
		});
	}

	@Override
	public void surfaceChanged(SurfaceHolder holder, int format, int width,
			int height) {
		
	}

	@Override
	public void surfaceDestroyed(SurfaceHolder holder) {
		
	}

}
