package com.itheima.paint;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Bitmap.CompressFormat;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.ImageView;

/**
 * 
 * @author xfhy
 * 
 */
public class MainActivity extends Activity implements OnTouchListener,OnClickListener { // 触摸事件的监听OnTouchListener

	private ImageView iv_img;
	private Bitmap copyBitmap;
	private Canvas canvas;
	private Paint paint;
	private int startX = 0;
	private int startY = 0;
	private int stopX = 0;
	private int stopY = 0;
	private Button bt_change_color;
	private Button bt_change_big;
	private Button bt_save;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		iv_img = (ImageView) findViewById(R.id.iv_img);
		bt_change_color = (Button) findViewById(R.id.bt_change_color);
		bt_change_big = (Button) findViewById(R.id.bt_change_big);
		bt_save = (Button) findViewById(R.id.bt_save);
		
		
		// 1.得到原图的bitmap
		Bitmap srcBitmap = BitmapFactory.decodeResource(getResources(),
				R.drawable.bg);

		// 2.构建新图(副本)
		copyBitmap = Bitmap.createBitmap(srcBitmap.getWidth(),
				srcBitmap.getHeight(), srcBitmap.getConfig());
		// 2.1 创建画布 以copyBitmap为模板
		canvas = new Canvas(copyBitmap);
		// 2.2 创建画笔
		paint = new Paint();
		// 2.3 开始作画
		canvas.drawBitmap(srcBitmap, new Matrix(), paint);

		// 3. 设置图片 显示
		iv_img.setImageBitmap(copyBitmap);

		iv_img.setOnTouchListener(this); // 监听触摸事件
		bt_change_color.setOnClickListener(this);
		bt_change_big.setOnClickListener(this);
		bt_save.setOnClickListener(this);
	}

	// 监听 触摸事件
	@Override
	public boolean onTouch(View v, MotionEvent event) {
		int action = event.getAction(); // 返回正在执行的操作类型

		switch (action) {
		case MotionEvent.ACTION_DOWN: // 按下
			// 4. 获取用户按下时的坐标
			startX = (int) event.getX();
			startY = (int) event.getY();

			Log.d("xfhy", "按下:" + startX + "----" + startY);

			break;
		case MotionEvent.ACTION_UP: // 抬起
			stopX = (int) event.getX();
			stopY = (int) event.getY();
			break;
		case MotionEvent.ACTION_MOVE: // 移动
			// 5.获取用户移动时的坐标
			stopX = (int) event.getX();
			stopY = (int) event.getY();

			Log.d("xfhy", "移动:" + stopX + "----" + stopY);

			// 6. 根据用户的轨迹画线
			canvas.drawLine(startX, startY, stopX, stopY, paint);

			// 7. 结束节点 既是下一次的开始节点
			startX = stopX;
			startY = stopY;

			// 8.更新UI
			iv_img.setImageBitmap(copyBitmap);

			break;
		default:
			break;
		}

		// 如果需要监听移动事件,这里必须返回true 表示在消耗
		return true;
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.bt_change_color:   //变颜色
			paint.setColor(Color.RED);
			break;
		case R.id.bt_change_big:    //画笔变粗
			//设置画笔的宽度
			paint.setStrokeWidth(10);
			break;
		case R.id.bt_save:           //保存
			/*
			 * 参数 
			 * format: 图片的格式
			   quality: 0-100 图片的质量
			   stream: 输出流
			 */
			File file = new File(Environment.getExternalStorageDirectory().getPath());
			FileOutputStream fileOutputStream = null;
			try {
				fileOutputStream = new FileOutputStream(file);
				copyBitmap.compress(CompressFormat.PNG, 100, fileOutputStream);
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} finally {
				
			}
			
			break;
		default:
			break;
		}
	}

}
